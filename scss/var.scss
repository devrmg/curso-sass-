$bg: red;
$bg-section: rgba(0, 0, 0, 0.7);
$font-color: #ffffff;
$margin: 10px 20px 34px 21px;
body {
  background: $bg;
  color: $font-color;
}

section {
  background: $bg-section;
}

h1 {
  background-color: $bg;
  margin: $margin;
  font  {
    color: $bg-section;

  }
}

$linecolor :#145258;

li {
  color: $linecolor;
}
 /* Interpolação */
 
 $name: destaque;
$attr: border;


p.#{$name} {
  #{$attr}-color: blue;
}
h1 {
  $font-size: 12px;
  $line-height: 30px;
  font: #{$font-size}/#{$line-height};
}

/*extend */
/* Também é possível herdar estilos de pseudo-elementos:*/
.msg {
  border: 1px solid;
  padding: 4px;
  text-align: center;
}

.msg-error {
  @extend .msg;
  border-color: #ff0000;
  color: #ff0000;
}

.msg-alert {
  @extend .msg ;
  border-color: #ff8e00;
  color: #ff8e00;
}

a:hover {
  text-decoration: underline;
}

.hoverlink {
  @extend a:hover;
}

/* Operações */
p {
	$width: 1000px;
	width: $width/2;
}

$width: 1000px;
$base-size: 20px;
$line-height: 22px;

p {
  font: 10px/8px bold italic serif; // Imprime CSS
  width: $width/2; // Divisão pois usa uma variável
  width: round(1.5)/2; // Divisão pois usa uma função
  height: (500px/2); // Divisão pois usa parênteses
  margin-left: 5px + 8px/2px;  // Divisão pois usa uma expressão aritimética
  font: (italic bold 10px/8px); 
  font-size: #{$base-size} / #{$line-height}; // Usa interpolção e imprime CSS 
}
$font-size: 27px; 

p {
	font-size: $font-size % 2;
}

/* Mixins */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin titulo($size, $color: blue) {
  color: $color;
  font-size: $size;
}

h1 {
  @include titulo(14px);
}

h1 {
  @include titulo(14px, green);
}  

/* Funcoes */ 
@function calc-fluid($target, $container) {
  @return ($target / $container) * 100%;
}

div {
  width: calc-fluid(650px, 1000px);
}

/* Place Holder */

%center {
  display: block;
  margin: 0 auto;
}

div {
  @extend %center;
}

.container {
  @extend %center;
}
/* -------------------------*/
@mixin center {
  display: block;
  margin: 0 auto;
}

div {
  @include center;
}

.container {
  @include center;
}           

/* Condicoes */

$template: dark;

header {
  @if ($template == dark) {
    color: #fff;
    background: rgb(223, 202, 202);
  } @else if ($template  == light) {
    color: #333;
    background: #fff;
  } @else if ($template == sea) {
    color: #1a8acd;
    background: #b1d3ff;
  } @else {
    color: #555;
    background: #f0f0f0;
  }
}

/* iterações */

@for $i from 1 through 3 {
  .item-#{$i} { width: 2em * $i; }
}

@for $i from 1 to 3 {
  .item-#{$i} { width: 2em * $i; }
}
@each $animal in puma, sea-slug, egret, salamander {
  .#{$animal}-icon {
    background-image: url('/images/#{$animal}.png');
  }
}

$i: 6;

@while $i > 0 {
  .item-#{$i} { 
	width: 2em * $i; 
  }
  $i: $i - 2;
}

/* Media Queries */

.sidebar {
  width: 30%;
  @media screen and (orientation: landscape) {
     width: 40%;
  }
}

.container {
  width: 90%;
  @media screen and (orientation: landscape) {
     width: 100%;
  }
}

.sidebar {
  width: 30%; 
}

.container {
  width: 90%; 
}

@media screen and (orientation: landscape) {
.sidebar {
   width: 40%; 
} 

.container {
   width: 90%;
} 

}
//@at-rootA seguir será apresentado um exemplo utilizando mixins, media, interpolação e content, cujo objetivo é simplificar a chamada das diferentes diretivas @media que podem existir em seu CSS.
$color: white;

@mixin colors($color: blue) {
  background-color: $color;
  @content;
  border-color: $color;
}

.colors {
  @include colors { color: $color; }
}
// Exemplo de media + mixin + interpolação + content
$tablet-width: 768px;
$desktop-width: 1024px;


@mixin landscape {
   @media screen and (orientation: landscape) {
       @content;
   }
}

@mixin tablet {
   @media (min-width: #{$tablet-width}) {
       @content;
   }
}

@mixin desktop {
   @media (min-width: #{$desktop-width}) {
       @content;
   }
}
// Exemplo de utilização dos mixins:

header {

  padding: 3em;	

  @include tablet {
      padding: 2em;
  }

}


/* @import
@import "foo.css";                                  //importando um arquivo CSS
@import "foo.css" min-width:400px;                      //importa o arquivo CSS //quando a tela tem no mínimo 400px
@import "http://foo.com/bar";                       //importa arquivo via http
@import @import url("http://fonts.googleapis.com/css?family=Droid+Sans");  //importa via url()

//É possível importar vários arquivos de uma só vez:

@import "file1", "file2"; */
